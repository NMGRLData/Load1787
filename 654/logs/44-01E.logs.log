do run
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=624.242112, duration=0.000353813171387
script duration name:analysis400_120 seconds:624.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.0001060962677
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.00407409668e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000141859054565
executed snippet estimated_duration=42.0, duration=0.0042679309845
script duration name:diode seconds:42.0
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000236988067627
executed snippet estimated_duration=4.0, duration=0.00167107582092
Script duration 666.0
Run total estimated duration= 667.000
run duration: 0:11:07
doing event level: 2
10:54:11 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4702864016
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65444-01E
loading script "felix_analysis400_120.py"
loading script "felix_pump_ms.py"
loading script "felix_diode.py"
loading script "felix_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65444-01E
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/obama/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
10:54:11 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
GetData ===>> L2(CDD),0.000471734112749906,H2,0.30826987527549,H1,0.0194224216672302,AX,-0.0153387851208848,L1,...
Pre Extraction Termination data. keys=L2(CDD),H2,H1,AX,L1,L2, signals=0.00047,0.30827,0.01942,-0.01534,-0.14150,-0.20804
10:54:11 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing L2_CDD_
evaluate ot="L2(CDD).inactive" t="L2_CDD_", ctx="{'L2_CDD_': False}"
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
10:54:11 -- ******* Pre Extraction Check Passed *******
=================================================================================
10:54:11 -- stopping status monitor
stop 4758119440
Status monitor stopped
Status monitor finished
10:54:13 -- starting status monitor
start 4758119440
StatusMonitor period=1. Frequencies(state=1, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 10:54:14.622155
Extraction Started felix_diode.py
10:54:14 -- ******* Extraction Started felix_diode.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x11964f590>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000128030776978
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.90870666504e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000108003616333
executed snippet estimated_duration=204.0, duration=0.00539588928223
Felix unknown laser analysis
set_motor ('beam', '3.0') {}
setting motor "beam" to 3.0
set motor beam to 3.0
SetMotor beam,3.0 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000139951705933
Prepare for Diode Analysis
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=5
10:54:15 -- CLOSE  VALVE-H (Felix Inlet)
---------------------------------------- close None (Felix Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Felix Ion Pump'}
opening name=--- desc=Felix Ion Pump
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=5
10:54:16 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open None (Felix Ion Pump) result=[(True, True)], time=0.13 sec
action=open, ok=True, locked=[False]
close () {'description': 'Bone to Minibone'}
closing name=--- desc=Bone to Minibone
checking ownership. requestor=129.138.12.137
check software interlocks E
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close E ===>> OK
GetIndicatorState E ===>> False
change switch state (True, True)
update switch state E False args=() kw={} ncanvase=5
10:54:16 -- CLOSE  VALVE-E (Bone to Minibone)
---------------------------------------- close None (Bone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=5
10:54:17 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.20 sec
action=open, ok=True, locked=[False]
close () {'description': 'Bone to CO2 Laser'}
closing name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close D ===>> OK
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=5
GetIndicatorState D ===>> False
change switch state (True, True)
update switch state D False args=() kw={} ncanvase=5
10:54:18 -- CLOSE  VALVE-D (Bone to CO2 Laser)
---------------------------------------- close None (Bone to CO2 Laser) result=[(True, True)]
refresh_canvas_needed fired
action=close, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
opening name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=5
10:54:18 -- OPEN   VALVE-B (Bone to Diode Laser)
---------------------------------------- open None (Bone to Diode Laser) result=[(True, True)], time=0.18 sec
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=3.07923698425
PrepareForDiodeAnalysis.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.50611114502e-05
Isolate coldfinger
close () {'name': 'B', 'description': 'Bone to Diode Laser'}
closing name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=5
10:54:19 -- CLOSE  VALVE-B (Bone to Diode Laser)
---------------------------------------- close B (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.588718891144
IsolateDiodeColdfinger.py completed successfully
gosub finished
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=5
10:54:19 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.24 sec
action=open, ok=True, locked=[False]
Diodelaser enabled. Heating sample.
enable () {}
set extraction state FusionsDiode Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
move_to_position ('37',) {}
FusionsDiode move to position 37
sending GoToHole 37,True
GoToHole 37,True ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 4.80060,-14.40180,9.00000
got position (4.8006, -14.4018, 9.0)
move to position succeeded
BEGIN INTERVAL Interval 1 waiting for 40.0
block started
set extract to 1.75 (watts)
WaitControl setup for 40.0  
extract () {}
GetPosition ===>> 4.80060,-14.40180,9.00000
set extraction state FusionsDiode ON! 1.75(watts) (0.75, 'red', 1.5)
extract sample to 1.75 (watts)
set laser output
SetLaserOutput 1.75,watts ===>> OK
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.01843094826
executing pattern diamond_37hole_3mmbeam.lp
execute_pattern ('diamond_37hole_3mmbeam.lp',) {}
executing pattern diamond_37hole_3mmbeam.lp
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
Join finished
block finished. duration 40.0892500877
Interval 1 finished
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Diode laser disabled.
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=42.0, duration=0.000152111053467
Equilibrate then isolate coldfinger
close () {'name': 'C', 'description': 'Bone to Turbo'}
closing name=C desc=Bone to Turbo
checking ownership. requestor=129.138.12.137
check software interlocks C
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close C ===>> OK
GetIndicatorState C ===>> False
change switch state (True, True)
update switch state C False args=() kw={} ncanvase=5
10:55:06 -- CLOSE  VALVE-C (Bone to Turbo)
---------------------------------------- close C (Bone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
open () {'name': 'B', 'description': 'Bone to Diode Laser'}
opening name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=5
10:55:08 -- OPEN   VALVE-B (Bone to Diode Laser)
---------------------------------------- open B (Bone to Diode Laser) result=[(True, True)], time=0.15 sec
action=open, ok=True, locked=[False]
sleep (20,) {}
SLEEP 20.0
block started
WaitControl setup for 20.0  
Join finished
block finished. duration 20.0428180695
close () {'name': 'B', 'description': 'Bone to Diode Laser'}
closing name=B desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close B ===>> OK
GetIndicatorState B ===>> False
change switch state (True, True)
update switch state B False args=() kw={} ncanvase=5
10:55:28 -- CLOSE  VALVE-B (Bone to Diode Laser)
---------------------------------------- close B (Bone to Diode Laser) result=[(True, True)]
action=close, ok=True, locked=[False]
executed snippet estimated_duration=63.0, duration=22.4495790005
EquilibrateThenIsolateDiodeColdfinger.py completed successfully
gosub finished
sleep (60.0,) {}
SLEEP 60.0
block started
WaitControl setup for 60.0  
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
Join finished
block finished. duration 60.1006641388
executed snippet estimated_duration=306.0, duration=134.557411194
felix_diode.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> rN[177]N[00][00][00][00] [29][162]=[00][00][250]D
GetOutputBlob ===>> rN[177]N[00][00][00][00] [29][162]=[164]^[151]A
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 37
create new session 4671737776
close session 4671737776
Extraction Finished
10:56:29 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
10:56:29 -- Sending spectrometer configuration
======== Sending configuration ========
SetZFocus 9.84 ===>> OK
SetHV 9000.0 ===>> OK
SetZSymmetry 18.34 ===>> OK
SetExtractionLens 42.35 ===>> OK
SetIonRepeller -4.08 ===>> OK
SetElectronEnergy 107.0 ===>> OK
SetYSymmetry 12.72 ===>> OK
send trap current 400.0
GetParameter Trap Current Readback ===>> 398.3080021974
SetParameter Trap Current Set,400.0 ===>> OK
updating mftable name argon
Using mftable located at /Users/obama/PychronDev/setupfiles/spectrometer/mftables/argon.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     L2(CDD)
Ar40     3.4931 3.5643 3.6386 3.7155 3.8114 3.7980
Ar39     3.4241 3.4944 3.5672 3.6455 3.7365 3.7228
Ar36     3.2140 3.2803 3.3486 3.4204 3.5171 3.4945
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetParameter Trap Current Readback ===>> 397.524812305439
GetHighVoltage ===>> 9000
start measurement
do measurement
L#=65444 analysis type=unknown
Measurement Started felix_analysis400_120.py
10:56:29 -- ******* Measurement Started felix_analysis400_120.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 42.35
GetYSymmetry ===>> 12.72
GetZSymmetry ===>> 18.34
GetZFocus ===>> 9.84
GetDeflection H2 (CDD) ===>> 3250
GetDeflection H1 (CDD) ===>> 3250
GetDeflection AX (CDD) ===>> 3250
GetDeflection L1 (CDD) ===>> 3250
GetDeflection L2 (CDD) ===>> 0
GetGain H2 ===>> 0.9809305
GetGain H1 ===>> 0.96484
GetGain AX ===>> 0.96253
GetGain L1 ===>> 0.970094835296087
GetGain L2 ===>> 0.967359864778375
GetGain H2(CDD) ===>> 0
GetGain H1(CDD) ===>> 0
GetGain AX(CDD) ===>> 0
GetGain L1(CDD) ===>> 0
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
flush and close file /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
testing...
no interpolation path defined
executed snippet estimated_duration=650.242112, duration=0.000304222106934
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Ar39
setting isotope det=AX, iso=Ar38
setting isotope det=L1, iso=Ar37
setting isotope det=L2(CDD), iso=Ar36
setting previous blanks
 - setting Ar40 blank 0.419+/-0.019
 - setting Ar36 blank 0.00190+/-0.00018
 - setting Ar37 blank -0.002+/-0.011
 - setting Ar38 blank 0.002+/-0.012
 - setting Ar39 blank 0.019+/-0.023
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.9624)
setting detector H1 to Ar39 (38.8624)
setting detector AX to Ar38 (37.9624)
setting detector L1 to Ar37 (36.9624)
setting detector L2 to Ar36 (35.8624)
setting detector H2(CDD) to Ar40 (39.8624)
setting detector H1(CDD) to Ar39 (38.8624)
setting detector AX(CDD) to Ar38 (37.8624)
setting detector L1(CDD) to Ar37 (36.8624)
setting detector L2(CDD) to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [ -2.38925034e-04   8.80081338e-02   3.57665459e-01]
H2 map mass to dac 39.9624 >> 3.49312
GetHighVoltage ===>> 9000
positioning Ar40 (3.49312) on H2
setting magnet DAC
current  : 3.493116
requested: 3.493120
Delta Dac: 0.000004
Checking detector protection. dv=0.00000
SetMagnetDAC 3.49312 ===>> OK
Magnet settling time: 0.500
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1f1b42110>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1ec6ddcb0>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x202b72410>"
setting label 0 H2 Ar40
setting label 1 H1 Ar39
setting label 2 AX Ar38
setting label 3 L1 Ar37
setting label 4 L2(CDD) Ar36
equilibrate () {'delay': 3, 'inlet': 'H', 'outlet': 'V', 'eqtime': 25.0}
Equilibration Started
10:56:30 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close V ===>> OK
GetIndicatorState V ===>> False
change switch state (True, True)
update switch state V False args=() kw={} ncanvase=5
10:56:30 -- CLOSE  VALVE-V (Felix Ion Pump)
waiting 3s before opening inlet value ('H',)
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open H ===>> OK
GetIndicatorState H ===>> OK
change switch state (True, True)
update switch state H True args=() kw={} ncanvase=5
10:56:34 -- OPEN   VALVE-H (Felix Inlet)
set_time_zero () {}
equilibrating for 25.0sec
sniff (25.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) u'' table H2
add group /sniff/Ar39 (Group) u'' table H1
add group /sniff/Ar38 (Group) u'' table AX
add group /sniff/Ar37 (Group) u'' table L1
add group /sniff/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
measuring sniff. ncounts=25.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
GetData ===>> L2(CDD),0.00125795775396796,H2,0.243330410870935,H1,0.0317188552919924,AX,-0.137794203784813,L1,-...
GetData ===>> L2(CDD),0.00283040548628499,H2,0.759234195288174,H1,-0.0482626170915027,AX,-0.0911299782032004,L1...
GetData ===>> L2(CDD),0.00298765029250797,H2,0.662539829305531,H1,0.203080798076152,AX,0.131215426958733,L1,0.0...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.820722470083875,H1,0.291014738558629,AX,-0.0581082254196825,L1,-...
GetData ===>> L2(CDD),0.000943468279485503,H2,0.796482150181933,H1,0.0804464512879339,AX,0.259439996151973,L1,0...
GetData ===>> L2(CDD),0.00267316068606042,H2,0.631748937024546,H1,-0.0571107346369163,AX,-0.0504259190815257,L1...
GetData ===>> L2(CDD),0.00267316068606042,H2,0.660673687038936,H1,0.0844688864082502,AX,-0.242121265279444,L1,-...
GetData ===>> L2(CDD),0.00110071301372752,H2,0.444225333857045,H1,-0.0240160608653273,AX,-0.0687716236245876,L1...
GetData ===>> L2(CDD),0.00251591589183427,H2,0.593728187326433,H1,0.0174687971101265,AX,-0.299668276430928,L1,-...
GetData ===>> L2(CDD),0.00251591589183427,H2,0.863144474868206,H1,-0.0652693165539851,AX,0.0946321212550758,L1,...
GetData ===>> L2(CDD),0.00172969201067973,H2,0.743603819198469,H1,0.209402578682605,AX,-0.300012172527487,L1,-0...
GetData ===>> L2(CDD),0.00172969201067973,H2,0.573202261730669,H1,0.0479228062657594,AX,-0.0419409124526422,L1,...
GetData ===>> L2(CDD),0.0014152025002068,H2,0.763783381506504,H1,-0.0245906308595571,AX,-0.142609547898544,L1,-...
GetData ===>> L2(CDD),0.00235867110360653,H2,0.633498393577735,H1,0.0393036495215477,AX,-0.00467479485568305,L1...
GetData ===>> L2(CDD),0.00172969201067973,H2,0.530402426974019,H1,-0.172588462737616,AX,-0.0152241191875608,L1,...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.553959597556422,H1,-0.0951452246858461,AX,-0.0177467665691053,L1...
GetData ===>> L2(CDD),0.0014152025002068,H2,0.534367455590409,H1,0.0757344771935254,AX,-0.26539268225162,L1,-0....
GetData ===>> L2(CDD),0.00298765029250797,H2,0.583348546132154,H1,0.231701553777568,AX,-0.267685402237897,L1,-0...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.746169983216853,H1,-0.246808638810148,AX,-0.0672810481831136,L1,...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.702662748928822,H1,0.168139339824106,AX,-0.174252638376355,L1,-0...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.711877256384034,H1,0.332628102943531,AX,-0.160494900798029,L1,-0...
GetData ===>> L2(CDD),0.00172969201067973,H2,0.8794611202592,H1,-0.0326345748387164,AX,0.115274567948543,L1,-0....
GetData ===>> L2(CDD),0.00188693677491381,H2,0.673970028351501,H1,0.00103552363431605,AX,-0.0602867787426902,L1...
GetData ===>> L2(CDD),0.00251591589183427,H2,0.715376459162895,H1,-0.135706034345135,AX,0.173075774092574,L1,-0...
Equilibration Finished
10:56:59 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=5
10:56:59 -- CLOSE  VALVE-H (Felix Inlet)
Post Equilibration Started felix_pump_extraction_line.py
10:56:59 -- ******* Post Equilibration Started felix_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000223875045776
executed snippet estimated_duration=4.0, duration=0.00165581703186
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000227928161621
Pump Bone
close () {'description': 'Felix Inlet'}
closing name=--- desc=Felix Inlet
checking ownership. requestor=129.138.12.137
check software interlocks H
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close H ===>> OK
GetIndicatorState H ===>> False
change switch state (True, True)
update switch state H False args=() kw={} ncanvase=5
10:56:59 -- CLOSE  VALVE-H (Felix Inlet)
---------------------------------------- close None (Felix Inlet) result=[(True, True)]
10:56:59 -- collecting point 25
GetData ===>> L2(CDD),0.00330213992294918,H2,0.801143703528018,H1,0.0767688109986405,AX,-0.10018783041656,L1,-0...
action=close, ok=True, locked=[False]
is_closed ('A',) {}
is A () closed?
is closed False
close () {'description': 'CO2 Laser to Bone'}
closing name=--- desc=CO2 Laser to Bone
checking ownership. requestor=129.138.12.137
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Bone) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Bone) result=[(True, False)]
action=close, ok=True, locked=[True]
sleep (1,) {}
SLEEP 1.0
set states for children of U. state=False
handle state [('U', False)]
update switch state U False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
measurement finished
estimated time: 26.214 actual time: :26.324
flush and close file /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
set_fits () {}
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
close () {'description': 'CO2 Laser to Roughing'}
set "Ar40" to "('Parabolic', 'SEM')"
closing name=--- desc=CO2 Laser to Roughing
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
checking ownership. requestor=129.138.12.137
set_baseline_fits () {}
check software interlocks G
interlocks []
using default fits file=/Users/obama/PychronDev/scripts/measurement/fits/nominal.yaml
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
---------------------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Bone to Turbo'}
opening name=--- desc=Bone to Turbo
set "H2" to "('average', 'SEM')"
set "L2(CDD)" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
checking ownership. requestor=129.138.12.137
set "AX" to "('average', 'SEM')"
check software interlocks C
set "H1" to "('average', 'SEM')"
interlocks []
multicollect () {'integration_time': 1.048576, 'ncounts': 400}
actuate state mode=None-script, software_lock=False
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
doing actuation None-script open_channel True
add group /signal/Ar40 (Group) u'' table H2
add group /signal/Ar39 (Group) u'' table H1
add group /signal/Ar38 (Group) u'' table AX
add group /signal/Ar37 (Group) u'' table L1
add group /signal/Ar36 (Group) u'' table L2(CDD)
flush and close file /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
measuring signal. ncounts=400
Open C ===>> OK
GetIndicatorState C ===>> OK
change switch state (True, True)
update switch state C True args=() kw={} ncanvase=5
10:57:01 -- OPEN   VALVE-C (Bone to Turbo)
---------------------------------------- open None (Bone to Turbo) result=[(True, True)], time=0.22 sec
"signal" increment series count="2" fit count="1" regressing="True"
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Getter GP-50'}
opening name=--- desc=Bone to Getter GP-50
checking ownership. requestor=129.138.12.137
check software interlocks N
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open N ===>> OK
GetIndicatorState N ===>> OK
change switch state (True, True)
update switch state N True args=() kw={} ncanvase=5
starting measurement
GetData ===>> L2(CDD),0.00283040548628499,H2,0.717126065245267,H1,0.326765338009989,AX,-0.00410145869867468,L1,...
10:57:01 -- OPEN   VALVE-N (Bone to Getter GP-50)
---------------------------------------- open None (Bone to Getter GP-50) result=[(True, True)], time=0.23 sec
action=open, ok=True, locked=[False]
open () {'description': 'Bone to Diode Laser'}
opening name=--- desc=Bone to Diode Laser
checking ownership. requestor=129.138.12.137
check software interlocks B
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open B ===>> OK
GetIndicatorState B ===>> OK
change switch state (True, True)
update switch state B True args=() kw={} ncanvase=5
10:57:02 -- OPEN   VALVE-B (Bone to Diode Laser)
---------------------------------------- open None (Bone to Diode Laser) result=[(True, True)], time=0.21 sec
action=open, ok=True, locked=[False]
open () {'description': 'Bone to CO2 Laser'}
opening name=--- desc=Bone to CO2 Laser
checking ownership. requestor=129.138.12.137
check software interlocks D
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open D ===>> OK
GetIndicatorState D ===>> OK
change switch state (True, True)
update switch state D True args=() kw={} ncanvase=5
GetData ===>> L2(CDD),0.00377387441359912,H2,0.82328638518887,H1,-0.26542023309503,AX,-0.311475305417419,L1,-0....
10:57:02 -- OPEN   VALVE-D (Bone to CO2 Laser)
---------------------------------------- open None (Bone to CO2 Laser) result=[(True, True)], time=0.25 sec
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
GetData ===>> L2(CDD),0.00283040548628499,H2,0.812564603078726,H1,0.0990647204115141,AX,-0.0660197902374459,L1,...
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('FelixCO2Flag',) {}
release FelixCO2Flag
Set FelixCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=4.50463986397
PumpBone.py completed successfully
gosub finished
get_resource_value () {'name': 'FelixMiniboneFlag'}
Read FelixMiniboneFlag ===>> 0
Get Resource Value FelixMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=4.51211595535
felix_pump_extraction_line.py completed successfully
Post Equilibration Finished
10:57:04 -- ******* Post Equilibration Finished *******
GetData ===>> L2(CDD),0.00172969201067973,H2,0.878179088272855,H1,0.0525197213527735,AX,-0.0529484741934613,L1,...
GetData ===>> L2(CDD),0.00220142632137721,H2,0.815711200866489,H1,0.26124274231425,AX,-0.185029395435026,L1,-0....
GetData ===>> L2(CDD),0.00235867110360653,H2,0.736488581438353,H1,0.0359709295599725,AX,-0.0355197766277729,L1,...
GetData ===>> L2(CDD),0.00314489510472937,H2,0.953239063079521,H1,0.0198820986080162,AX,-0.117500703137361,L1,-...
GetData ===>> L2(CDD),0.00235867110360653,H2,0.62545091933425,H1,0.0543584935217135,AX,0.0369502978991294,L1,-0...
GetData ===>> L2(CDD),0.00377387441359912,H2,0.741620878884533,H1,0.0143659897693337,AX,-0.342310455163385,L1,-...
GetData ===>> L2(CDD),0.00235867110360653,H2,0.968391619761214,H1,0.130440764743286,AX,-0.14673696653302,L1,-0....
GetData ===>> L2(CDD),0.00235867110360653,H2,0.8794611202592,H1,0.173311515354088,AX,0.0364916093812611,L1,-0.1...
GetData ===>> L2(CDD),0.00503183331926267,H2,0.706745114943194,H1,-0.00804287802444716,AX,-0.387587044204305,L1...
GetData ===>> L2(CDD),0.00345938474716741,H2,0.768099295674198,H1,-0.00183739752410322,AX,-0.103512843381798,L1...
GetData ===>> L2(CDD),0.00330213992294918,H2,0.574718366506363,H1,0.257219570044843,AX,-0.0698035591158247,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00251591589183427,H2,0.926431268303037,H1,0.121246213808695,AX,-0.0714087899031337,L1,-...
GetData ===>> L2(CDD),0.00298765029250797,H2,1.00604091088902,H1,-0.13030568502875,AX,0.00220526157272809,L1,0....
GetData ===>> L2(CDD),0.00314489510472937,H2,0.943914529428708,H1,0.163312001014579,AX,-0.130456490231746,L1,-0...
GetData ===>> L2(CDD),0.00314489510472937,H2,0.83051200026485,H1,0.0357410872288053,AX,-0.182392540498286,L1,-0...
GetData ===>> L2(CDD),0.00345938474716741,H2,0.965827324445425,H1,-0.180975858655842,AX,-0.0208427338643753,L1,...
GetData ===>> L2(CDD),0.00345938474716741,H2,0.965827324445425,H1,-0.180975858655842,AX,-0.0208427338643753,L1,...
GetData ===>> L2(CDD),0.00314489510472937,H2,0.862212103348969,H1,-0.148000333846732,AX,-0.0906713505068631,L1,...
GetData ===>> L2(CDD),0.00345938474716741,H2,0.89857525088688,H1,-0.000113645855720601,AX,-0.396985967804538,L1...
GetData ===>> L2(CDD),0.0020441815451463,H2,0.861279732718399,H1,0.136991935748793,AX,-0.212658614844318,L1,-0....
GetData ===>> L2(CDD),0.00188693677491381,H2,1.18195106368072,H1,0.0228700040666369,AX,-0.136647689730225,L1,0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
10:57:26 -- collecting point 25
GetData ===>> L2(CDD),0.00314489510472937,H2,1.08868793273399,H1,-0.0396442427525566,AX,-0.279722092543865,L1,-...
GetData ===>> L2(CDD),0.00251591589183427,H2,0.881325897055876,H1,-0.143863951506542,AX,-0.0616627046157324,L1,...
GetData ===>> L2(CDD),0.00298765029250797,H2,0.784012604134401,H1,0.132509550780802,AX,-0.244643317955209,L1,0....
GetData ===>> L2(CDD),0.00345938474716741,H2,1.04858751872347,H1,-0.193154687268778,AX,-0.0375837178151427,L1,-...
GetData ===>> L2(CDD),0.00345938474716741,H2,1.04858751872347,H1,-0.193154687268778,AX,-0.0375837178151427,L1,-...
GetData ===>> L2(CDD),0.00172969201067973,H2,1.00977095047841,H1,0.0747001444970894,AX,-0.0867730062652314,L1,-...
GetData ===>> L2(CDD),0.00314489510472937,H2,0.961631219331527,H1,-0.122607262454511,AX,-0.218505360409019,L1,-...
GetData ===>> L2(CDD),0.00314489510472937,H2,0.961514661112957,H1,-0.164086096542749,AX,-0.452460671106734,L1,0...
GetData ===>> L2(CDD),0.00251591589183427,H2,1.01781389672098,H1,-0.257608002687916,AX,0.0192909477669945,L1,-0...
GetData ===>> L2(CDD),0.00251591589183427,H2,1.01781389672098,H1,-0.257608002687916,AX,0.0192909477669945,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00361662957738405,H2,1.04695555992545,H1,0.104006667009519,AX,0.0993339729538402,L1,-0....
GetData ===>> L2(CDD),0.0020441815451463,H2,1.18603152858123,H1,0.0507958756283368,AX,-0.216097881243301,L1,0.1...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.06199299755266,H1,0.0241341207005915,AX,-0.0242826858448351,L1,-...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.06199299755266,H1,0.0241341207005915,AX,-0.0242826858448351,L1,-...
GetData ===>> L2(CDD),0.00314489510472937,H2,1.21599432051844,H1,0.01505550164945,AX,-0.218734643824729,L1,-0.1...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.909764183518835,H1,-0.421996153785836,AX,-0.0163707779080521,L1,...
GetData ===>> L2(CDD),0.00188693677491381,H2,0.909764183518835,H1,-0.421996153785836,AX,-0.0163707779080521,L1,...
GetData ===>> L2(CDD),0.00314489510472937,H2,1.11118684967659,H1,0.0772285152679925,AX,-0.198901426328961,L1,-0...
GetData ===>> L2(CDD),0.00314489510472937,H2,1.11118684967659,H1,0.0772285152679925,AX,-0.198901426328961,L1,-0...
GetData ===>> L2(CDD),0.00377387441359912,H2,1.13916549899863,H1,0.00540238018230389,AX,-0.220912833551551,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0045600986846507,H2,1.01897954658775,H1,0.0157450140220982,AX,-0.303336495124245,L1,-0....
GetData ===>> L2(CDD),0.0045600986846507,H2,1.01897954658775,H1,0.0157450140220982,AX,-0.303336495124245,L1,-0....
GetData ===>> L2(CDD),0.0040883641040245,H2,0.997881498852642,H1,0.129176508793031,AX,-0.125067821209973,L1,-0....
GetData ===>> L2(CDD),0.00361662957738405,H2,1.26239765293654,H1,0.147221046109097,AX,-0.25748275636701,L1,0.00...
GetData ===>> L2(CDD),0.00267316068606042,H2,1.00627403794702,H1,0.0749299961118109,AX,-0.201079660948634,L1,-0...
10:57:53 -- collecting point 50
GetData ===>> L2(CDD),0.00471734355685627,H2,1.02399185683765,H1,0.148485325707318,AX,-0.173679403237558,L1,-0....
GetData ===>> L2(CDD),0.00330213992294918,H2,1.19838961177651,H1,-0.0381503833695316,AX,0.0666508447818397,L1,-...
GetData ===>> L2(CDD),0.00361662957738405,H2,1.24689076694697,H1,-0.131914302880568,AX,0.043830651900353,L1,0.1...
GetData ===>> L2(CDD),0.00298765029250797,H2,1.01350100428472,H1,0.125268819059093,AX,-0.141806992219434,L1,-0....
GetData ===>> L2(CDD),0.00298765029250797,H2,1.01350100428472,H1,0.125268819059093,AX,-0.141806992219434,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00440285381844355,H2,1.13590128202949,H1,0.0619434657665773,AX,-0.0287546050373223,L1,0...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.13590128202949,H1,0.0619434657665773,AX,-0.0287546050373223,L1,0...
GetData ===>> L2(CDD),0.0039311192558126,H2,1.1967574031653,H1,0.215839343318034,AX,-0.127475528118908,L1,-0.15...
GetData ===>> L2(CDD),0.0045600986846507,H2,1.20934879723111,H1,-0.00712355009925007,AX,0.0214696812350426,L1,-...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.28116947521952,H1,0.00206977734587865,AX,-0.149144619227933,L1,0...
set states for children of O. state=False
handle state [('O', False)]
update switch state O False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
GetData ===>> L2(CDD),0.00251591589183427,H2,1.29294577110715,H1,-0.0433214252220614,AX,-0.0870023210698176,L1,...
GetData ===>> L2(CDD),0.00251591589183427,H2,1.29294577110715,H1,-0.0433214252220614,AX,-0.0870023210698176,L1,...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.3827301105666,H1,0.00930958437711714,AX,-0.07863229531198,L1,0.1...
set states for children of R. state=True
handle state [('R', True)]
update switch state R True args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
GetData ===>> L2(CDD),0.00440285381844355,H2,1.38587854206137,H1,0.0905600343776193,AX,-0.0700328779636528,L1,-...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.38587854206137,H1,0.0905600343776193,AX,-0.0700328779636528,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0045600986846507,H2,1.43765420145669,H1,-0.113070325402216,AX,-0.0448074771138454,L1,0....
GetData ===>> L2(CDD),0.0045600986846507,H2,1.43765420145669,H1,-0.113070325402216,AX,-0.0448074771138454,L1,0....
GetData ===>> L2(CDD),0.00298765029250797,H2,1.38657819487972,H1,0.0388439633252726,AX,-0.0803521695603269,L1,-...
GetData ===>> L2(CDD),0.00377387441359912,H2,1.3540448678575,H1,0.13273941616971,AX,-0.309526582460423,L1,-0.09...
GetData ===>> L2(CDD),0.00471734355685627,H2,1.4999285547705,H1,0.115614594637868,AX,0.0780038056055775,L1,-0.1...
GetData ===>> L2(CDD),0.0045600986846507,H2,1.44849944999294,H1,0.0152853390520831,AX,-0.215753955156693,L1,-0....
GetData ===>> L2(CDD),0.00330213992294918,H2,1.39707304717142,H1,0.278140249056367,AX,0.0207816596072904,L1,-0....
GetData ===>> L2(CDD),0.00440285381844355,H2,1.33247318629394,H1,-0.0953750357771129,AX,-0.128851357933645,L1,-...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.33247318629394,H1,-0.0953750357771129,AX,-0.128851357933645,L1,-...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.51100774060544,H1,0.209287636847492,AX,-0.350563561814538,L1,-0....
set states for children of R. state=False
handle state [('R', False)]
update switch state R False args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
10:58:19 -- collecting point 75
GetData ===>> L2(CDD),0.00440285381844355,H2,1.47287254376306,H1,-0.0324047487988128,AX,-0.360535971241617,L1,-...
GetData ===>> L2(CDD),0.00644703754701332,H2,1.55625876998107,H1,0.0948123680223181,AX,0.0855725205548317,L1,-0...
GetData ===>> L2(CDD),0.00644703754701332,H2,1.55625876998107,H1,0.0948123680223181,AX,0.0855725205548317,L1,-0...
set states for children of U. state=True
handle state [('U', True)]
update switch state U True args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
GetData ===>> L2(CDD),0.00361662957738405,H2,1.53071733905092,H1,-0.13628053781176,AX,0.0356889050009142,L1,-0....
GetData ===>> L2(CDD),0.00471734355685627,H2,1.52057092815848,H1,-0.228081795655871,AX,-0.202684672776806,L1,-0...
GetData ===>> L2(CDD),0.00471734355685627,H2,1.6430346366275,H1,-0.0882508664790713,AX,0.143371942924552,L1,-0....
GetData ===>> L2(CDD),0.0040883641040245,H2,1.47333902037581,H1,0.0131018859369278,AX,0.0187175976742878,L1,-0....
GetData ===>> L2(CDD),0.00424560895823481,H2,1.3540448678575,H1,-0.0787135897257711,AX,0.037179642240027,L1,-0....
GetData ===>> L2(CDD),0.00518907820946351,H2,1.5886821856253,H1,0.033787429621494,AX,-0.271468378272196,L1,0.02...
GetData ===>> L2(CDD),0.0040883641040245,H2,1.50879189340685,H1,-0.00160756414613607,AX,-0.0372397279249043,L1,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00503183331926267,H2,1.49223151001028,H1,0.0335575878104955,AX,-0.207614335224533,L1,-0...
GetData ===>> L2(CDD),0.00613254767663533,H2,1.49922882092715,H1,0.0845838133727078,AX,-0.146622316254167,L1,-0...
GetData ===>> L2(CDD),0.00613254767663533,H2,1.49922882092715,H1,0.0845838133727078,AX,-0.146622316254167,L1,-0...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.6597142127683,H1,0.0855032295787583,AX,-0.0659051303424829,L1,0....
GetData ===>> L2(CDD),0.00283040548628499,H2,1.55089384792109,H1,-0.0106859409299954,AX,-0.05730559926788,L1,0....
GetData ===>> L2(CDD),0.00440285381844355,H2,1.47310578204134,H1,0.11572952531292,AX,-0.0952576176329202,L1,-0....
GetData ===>> L2(CDD),0.00518907820946351,H2,1.64093512969797,H1,-0.264845806544386,AX,-0.155908944564315,L1,-0...
GetData ===>> L2(CDD),0.0040883641040245,H2,1.43986988762767,H1,0.103317091545422,AX,-0.144443958366271,L1,-0.1...
GetData ===>> L2(CDD),0.0040883641040245,H2,1.49747948850886,H1,-0.0910086156750795,AX,-0.214378249580276,L1,-0...
GetData ===>> L2(CDD),0.0040883641040245,H2,1.49747948850886,H1,-0.0910086156750795,AX,-0.214378249580276,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00330213992294918,H2,1.41608067721473,H1,0.212276129016762,AX,-0.205436115396527,L1,-0....
GetData ===>> L2(CDD),0.00471734355685627,H2,1.63417008244399,H1,0.0851584483985215,AX,-0.0552417003761796,L1,-...
GetData ===>> L2(CDD),0.00471734355685627,H2,1.49129853900036,H1,0.19894292774779,AX,-0.0847091705676189,L1,-0....
GetData ===>> L2(CDD),0.00566081291605652,H2,1.58646616259541,H1,-0.0914682397743962,AX,-0.0269199740361638,L1,...
GetData ===>> L2(CDD),0.0040883641040245,H2,1.39310831196928,H1,0.146416505409153,AX,-0.230771946439902,L1,-0.0...
10:58:45 -- collecting point 100
GetData ===>> L2(CDD),0.00597530275044398,H2,1.67021199381823,H1,0.0158599327988263,AX,-0.24728000232113,L1,-0....
GetData ===>> L2(CDD),0.00597530275044398,H2,1.67021199381823,H1,0.0158599327988263,AX,-0.24728000232113,L1,-0....
GetData ===>> L2(CDD),0.00534632310566276,H2,1.63183731836815,H1,0.204230209650512,AX,-0.333598765791672,L1,-0....
GetData ===>> L2(CDD),0.0039311192558126,H2,1.71092112056064,H1,0.173656328042023,AX,-0.228364497962899,L1,-0.1...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.56115720275806,H1,0.218253141129053,AX,0.116077338707688,L1,-0.2...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00518907820946351,H2,1.74206649516628,H1,0.356999193939952,AX,-0.153730607696873,L1,0.0...
GetData ===>> L2(CDD),0.00361662957738405,H2,1.89629152660461,H1,0.0968810776539518,AX,-0.0709501528084712,L1,-...
GetData ===>> L2(CDD),0.00534632310566276,H2,1.76049755804416,H1,0.176529771901634,AX,0.219410993489656,L1,-0.3...
GetData ===>> L2(CDD),0.00534632310566276,H2,1.76049755804416,H1,0.176529771901634,AX,0.219410993489656,L1,-0.3...
GetData ===>> L2(CDD),0.00518907820946351,H2,1.63813579412968,H1,0.0127571306331551,AX,-0.368674297749084,L1,-0...
GetData ===>> L2(CDD),0.00566081291605652,H2,1.88999138977994,H1,-0.21912035557826,AX,-0.163361112346664,L1,-0....
GetData ===>> L2(CDD),0.00566081291605652,H2,1.88999138977994,H1,-0.21912035557826,AX,-0.163361112346664,L1,-0....
GetData ===>> L2(CDD),0.00534632310566276,H2,1.70403894298423,H1,0.0519451057692287,AX,-0.0333411672394611,L1,-...
GetData ===>> L2(CDD),0.0045600986846507,H2,2.10608589868661,H1,-0.133063313989308,AX,0.0554126922247386,L1,-0....
GetData ===>> L2(CDD),0.00534632310566276,H2,1.85137477025195,H1,-0.0420573953294496,AX,0.00507196626756738,L1,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.006761527441385,H2,1.947627485783,H1,0.137451668717831,AX,-0.209448621781794,L1,-0.0137...
GetData ===>> L2(CDD),0.00644703754701332,H2,1.88310795329731,H1,-0.0382652957120644,AX,-0.0481326814241476,L1,...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.84274165577752,H1,0.0920540954142778,AX,-0.260234042310147,L1,-0...
GetData ===>> L2(CDD),0.00424560895823481,H2,1.84274165577752,H1,0.0920540954142778,AX,-0.260234042310147,L1,-0...
GetData ===>> L2(CDD),0.0045600986846507,H2,1.85989129560662,H1,0.193540734863373,AX,0.0400464511127822,L1,-0.1...
GetData ===>> L2(CDD),0.0045600986846507,H2,1.85989129560662,H1,0.193540734863373,AX,0.0400464511127822,L1,-0.1...
GetData ===>> L2(CDD),0.00550356800786043,H2,1.74264975133339,H1,-0.00654896970057536,AX,0.174337347061454,L1,-...
GetData ===>> L2(CDD),0.0039311192558126,H2,1.82302577438433,H1,-0.0368863467008013,AX,-0.194315653118303,L1,-0...
GetData ===>> L2(CDD),0.00503183331926267,H2,1.92732612563124,H1,0.0972258630238175,AX,-0.0230213715464037,L1,-...
GetData ===>> L2(CDD),0.00440285381844355,H2,1.95824503143795,H1,0.122165664958598,AX,-0.190761663849337,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
10:59:12 -- collecting point 125
GetData ===>> L2(CDD),0.00566081291605652,H2,1.80331029002125,H1,0.108373989727203,AX,-0.214607533979333,L1,-0....
GetData ===>> L2(CDD),0.00628979260882512,H2,2.02988730493473,H1,-0.0225221772796758,AX,-0.0102934711208725,L1,...
GetData ===>> L2(CDD),0.00471734355685627,H2,1.99079844402075,H1,0.0779180720827139,AX,-0.0945696789572395,L1,-...
GetData ===>> L2(CDD),0.00660428249119995,H2,1.9753966945651,H1,0.33492723617192,AX,0.0178002382362066,L1,-0.09...
GetData ===>> L2(CDD),0.00534632310566276,H2,2.00456687968906,H1,0.0951571526528502,AX,-0.133322791247634,L1,-0...
GetData ===>> L2(CDD),0.00487458843506026,H2,1.94541065012107,H1,0.0396484143128288,AX,-0.319843306198636,L1,-0...
GetData ===>> L2(CDD),0.00487458843506026,H2,1.94541065012107,H1,0.0396484143128288,AX,-0.319843306198636,L1,-0...
GetData ===>> L2(CDD),0.00691877239756847,H2,2.00515029225619,H1,-0.00264181391508565,AX,-0.133666746795536,L1,...
GetData ===>> L2(CDD),0.00597530275044398,H2,1.75699796245614,H1,0.0838942517924871,AX,-0.115207625306867,L1,-0...
GetData ===>> L2(CDD),0.00471734355685627,H2,2.14529606156774,H1,0.0305696492476793,AX,-0.0867730062652314,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00566081291605652,H2,2.11145386393735,H1,0.160783404612151,AX,0.012066761558973,L1,-0.0...
GetData ===>> L2(CDD),0.00613254767663533,H2,1.99429887541255,H1,-0.180631172589564,AX,-0.218505360409019,L1,0....
GetData ===>> L2(CDD),0.00550356800786043,H2,2.10865318274384,H1,-0.0404486276154891,AX,-0.343800604656446,L1,-...
GetData ===>> L2(CDD),0.00550356800786043,H2,2.10865318274384,H1,-0.0404486276154891,AX,-0.343800604656446,L1,-...
GetData ===>> L2(CDD),0.00550356800786043,H2,2.21928618126953,H1,0.0878017739284149,AX,0.418999066740368,L1,0.0...
GetData ===>> L2(CDD),0.00660428249119995,H2,1.83142539128666,H1,-0.0313705309416125,AX,0.0129841155321163,L1,0...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.07866305712458,H1,0.0605643754676001,AX,-0.287975736021398,L1,0....
GetData ===>> L2(CDD),0.00581805783025104,H2,2.07772952709967,H1,-0.144438450114689,AX,-0.0595988150682851,L1,-...
GetData ===>> L2(CDD),0.00691877239756847,H2,2.06991124807909,H1,-0.134671927241875,AX,-0.152584112628723,L1,-0...
GetData ===>> L2(CDD),0.00723326232793069,H2,2.2651535261802,H1,-0.197061071420222,AX,-0.0579935645819803,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00691877239756847,H2,2.0590591134988,H1,0.0595300590375761,AX,0.022043032967017,L1,-0.2...
GetData ===>> L2(CDD),0.00660428249119995,H2,2.03292113253194,H1,-0.144438450114689,AX,-0.206353261188024,L1,-0...
GetData ===>> L2(CDD),0.00550356800786043,H2,1.93304313274926,H1,0.137796468588792,AX,-0.0990412715580302,L1,-0...
GetData ===>> L2(CDD),0.00723326232793069,H2,2.16268440418005,H1,0.0357410872288053,AX,0.12204079959588,L1,-0.1...
GetData ===>> L2(CDD),0.00440285381844355,H2,2.07586246971933,H1,-0.101350104938515,AX,0.0257124921424538,L1,-0...
10:59:38 -- collecting point 150
GetData ===>> L2(CDD),0.006761527441385,H2,2.09733384453414,H1,-0.078253959548536,AX,-0.138482111562329,L1,-0.1...
GetData ===>> L2(CDD),0.006761527441385,H2,2.17027001950143,H1,-0.00827270986911651,AX,-0.298865851727805,L1,-0...
GetData ===>> L2(CDD),0.00550356800786043,H2,2.17050342398183,H1,0.0719419293961829,AX,-0.1812460795767,L1,-0.1...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.2166018993841,H1,0.0355112449518401,AX,-0.413835027860317,L1,-0....
GetData ===>> L2(CDD),0.00613254767663533,H2,2.00258327956231,H1,0.063667331412318,AX,-0.0701475373670493,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00628979260882512,H2,2.13210913513168,H1,0.211586476156148,AX,-0.142838849398561,L1,-0....
GetData ===>> L2(CDD),0.00786224226063624,H2,2.05485831949992,H1,-0.00608930513564798,AX,0.095893591407465,L1,-...
GetData ===>> L2(CDD),0.00723326232793069,H2,2.11927247466585,H1,-0.0290722650662351,AX,-0.368215802310654,L1,-...
GetData ===>> L2(CDD),0.00723326232793069,H2,2.11927247466585,H1,-0.0290722650662351,AX,-0.368215802310654,L1,-...
GetData ===>> L2(CDD),0.006761527441385,H2,2.20539801966298,H1,0.0878017739284149,AX,-0.0735873131174757,L1,-0....
GetData ===>> L2(CDD),0.00786224226063624,H2,2.36518213393968,H1,-0.158341212089988,AX,-0.221142116393838,L1,-0...
GetData ===>> L2(CDD),0.00660428249119995,H2,2.29491592979202,H1,-0.261514125801444,AX,-0.0498526101793188,L1,-...
GetData ===>> L2(CDD),0.00581805783025104,H2,1.90364173747109,H1,0.298256714405799,AX,-0.0325385204320315,L1,0....
GetData ===>> L2(CDD),0.00581805783025104,H2,1.90364173747109,H1,0.298256714405799,AX,-0.0325385204320315,L1,0....
GetData ===>> L2(CDD),0.00691877239756847,H2,2.25126471404848,H1,0.0595300590375761,AX,-0.149603219058431,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00628979260882512,H2,2.31895994384107,H1,0.0526346445108732,AX,-0.261838955477704,L1,-0...
GetData ===>> L2(CDD),0.00581805783025104,H2,2.33926942533614,H1,0.116763902003244,AX,-0.175055166997076,L1,0.0...
GetData ===>> L2(CDD),0.00581805783025104,H2,2.33926942533614,H1,0.116763902003244,AX,-0.175055166997076,L1,0.0...
GetData ===>> L2(CDD),0.00628979260882512,H2,2.38245765393624,H1,-0.133982521890936,AX,-0.207843621235715,L1,-0...
GetData ===>> L2(CDD),0.00739050730210944,H2,2.23037351049695,H1,0.0251683991782253,AX,-0.193971719246563,L1,-0...
GetData ===>> L2(CDD),0.00864846731148277,H2,2.26643737590305,H1,0.0807912307838353,AX,-0.303451126732972,L1,-0...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.49849167856606,H1,0.357229112823754,AX,-0.153386659319859,L1,-0....
GetData ===>> L2(CDD),0.00817673226297957,H2,2.38280783654676,H1,-0.0729681967695527,AX,-0.14788346856731,L1,0....
GetData ===>> L2(CDD),0.00597530275044398,H2,2.15311494252327,H1,0.264461292209514,AX,-0.0405649583827007,L1,-0...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.11122047353207,H1,-0.0011478972265242,AX,-0.205550758667991,L1,-...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:00:04 -- collecting point 175
GetData ===>> L2(CDD),0.00503183331926267,H2,2.39739888996344,H1,-0.0962942795956603,AX,-0.156482190288463,L1,-...
GetData ===>> L2(CDD),0.00597530275044398,H2,2.41210689181962,H1,0.0918242397191884,AX,-0.082416014601551,L1,0....
GetData ===>> L2(CDD),0.00707601735975037,H2,2.37428676190152,H1,-0.0409082758071,AX,-0.146163715003257,L1,0.18...
GetData ===>> L2(CDD),0.00691877239756847,H2,2.48623391385841,H1,-0.154089975565467,AX,0.0105760632179499,L1,-0...
GetData ===>> L2(CDD),0.00628979260882512,H2,2.2722730776749,H1,0.0728613335537297,AX,-0.0555856838322392,L1,-0...
GetData ===>> L2(CDD),0.00770499726846222,H2,2.09675037703852,H1,0.14457755775762,AX,-0.271124471974562,L1,-0.0...
GetData ===>> L2(CDD),0.00707601735975037,H2,2.42669838177263,H1,-0.0841142279018132,AX,-0.0359784306075332,L1,...
GetData ===>> L2(CDD),0.00817673226297957,H2,2.16256770286467,H1,-0.239226034468498,AX,-0.0751925375934974,L1,-...
GetData ===>> L2(CDD),0.00644703754701332,H2,2.20329730648592,H1,-0.00700863404676618,AX,-0.0481326814241476,L1...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.37218568639764,H1,0.0756195512833306,AX,0.0618344776176358,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00786224226063624,H2,2.26970536461104,H1,-0.0758408975255566,AX,-0.201194304739021,L1,-...
GetData ===>> L2(CDD),0.006761527441385,H2,2.42413026377673,H1,0.292279206614951,AX,-0.184341520930582,L1,-0.15...
GetData ===>> L2(CDD),0.00566081291605652,H2,2.47385956414915,H1,-0.00459539378609968,AX,-0.141921643071924,L1,...
GetData ===>> L2(CDD),0.00817673226297957,H2,2.33074872951446,H1,-0.1251351094781,AX,0.00748000481017586,L1,-0....
GetData ===>> L2(CDD),0.006761527441385,H2,2.4179434617122,H1,-0.122032750843218,AX,-0.144558608903944,L1,-0.28...
GetData ===>> L2(CDD),0.006761527441385,H2,2.4179434617122,H1,-0.122032750843218,AX,-0.144558608903944,L1,-0.28...
GetData ===>> L2(CDD),0.00801948725880869,H2,2.52254069127474,H1,-0.0889403045175141,AX,-0.196837831088187,L1,-...
GetData ===>> L2(CDD),0.00801948725880869,H2,2.52254069127474,H1,-0.0889403045175141,AX,-0.196837831088187,L1,-...
GetData ===>> L2(CDD),0.00849122228931661,H2,2.45798326897816,H1,-0.0818160876930215,AX,-0.030015911821838,L1,-...
GetData ===>> L2(CDD),0.00880571233964735,H2,2.35829535619656,H1,0.138256201941101,AX,-0.0379277075827033,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00644703754701332,H2,2.67291365702368,H1,0.330328975194052,AX,-0.244528679340377,L1,-0....
GetData ===>> L2(CDD),0.00817673226297957,H2,2.70056026891181,H1,-0.150872811146365,AX,-0.123806638996974,L1,-0...
GetData ===>> L2(CDD),0.00817673226297957,H2,2.70056026891181,H1,-0.150872811146365,AX,-0.123806638996974,L1,-0...
GetData ===>> L2(CDD),0.00959193757044672,H2,2.4686063497563,H1,0.0547032636933556,AX,-0.20394575162041,L1,-0.0...
GetData ===>> L2(CDD),0.00628979260882512,H2,2.38187401653027,H1,0.111706959840215,AX,0.138325823318323,L1,-0.0...
11:00:30 -- collecting point 200
GetData ===>> L2(CDD),0.00723326232793069,H2,2.66801433884662,H1,0.0303398082027942,AX,-0.0714087899031337,L1,-...
GetData ===>> L2(CDD),0.00912020241397181,H2,2.4348697111095,H1,0.095042224428676,AX,-0.21598323922811,L1,-0.12...
GetData ===>> L2(CDD),0.00707601735975037,H2,2.57075723829107,H1,0.163541873743693,AX,-0.254043637876132,L1,0.0...
GetData ===>> L2(CDD),0.00880571233964735,H2,2.40428594269754,H1,0.0355112449518401,AX,-0.290039135829625,L1,-0...
GetData ===>> L2(CDD),0.00801948725880869,H2,2.77907156892559,H1,0.15710545804012,AX,-0.320874972488787,L1,-0.2...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.006761527441385,H2,2.61348865617857,H1,-0.0224072630614934,AX,-0.0350611224297997,L1,-0...
GetData ===>> L2(CDD),0.00723326232793069,H2,2.49277136927733,H1,0.210896823788495,AX,0.0234190785183511,L1,-0....
GetData ===>> L2(CDD),0.00912020241397181,H2,2.6459470992462,H1,-0.198210004924206,AX,-0.326033287349169,L1,0.0...
GetData ===>> L2(CDD),0.00691877239756847,H2,2.69251117480009,H1,-0.0769899754324828,AX,-0.15831657431226,L1,-0...
GetData ===>> L2(CDD),0.006761527441385,H2,2.74500645785625,H1,-0.00425064468471742,AX,0.344664879041852,L1,-0....
GetData ===>> L2(CDD),0.00739050730210944,H2,2.60157971298733,H1,-0.170175636704545,AX,-0.135730477503293,L1,-0...
GetData ===>> L2(CDD),0.00974918263460189,H2,2.69694400105516,H1,0.218827855783738,AX,0.0285792668579582,L1,-0....
GetData ===>> L2(CDD),0.00990642770475548,H2,2.82410466410758,H1,-0.0705551215225483,AX,-0.00146410797623177,L1...
GetData ===>> L2(CDD),0.00849122228931661,H2,2.73439051811247,H1,0.0607942237136509,AX,-0.036437084368867,L1,-0...
GetData ===>> L2(CDD),0.00849122228931661,H2,2.7030100063355,H1,0.0435557572238632,AX,-0.234211148102347,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00896295737381037,H2,2.82550468988641,H1,0.0429811469793315,AX,-0.100990420804758,L1,0....
GetData ===>> L2(CDD),0.00723326232793069,H2,2.65400349814361,H1,0.350331570134831,AX,-0.00994947147602993,L1,-...
GetData ===>> L2(CDD),0.00644703754701332,H2,2.5286114091901,H1,0.175380393330778,AX,-0.337610737799842,L1,0.05...
GetData ===>> L2(CDD),0.00896295737381037,H2,2.7058097137511,H1,-0.224749987914856,AX,-0.197525696660226,L1,-0....
GetData ===>> L2(CDD),0.0110071433637867,H2,2.75842237046173,H1,0.118372934613753,AX,-0.137564901083237,L1,-0.0...
GetData ===>> L2(CDD),0.00770499726846222,H2,2.85968927357296,H1,0.175035580026696,AX,-0.155450347738785,L1,-0....
GetData ===>> L2(CDD),0.00912020241397181,H2,2.84802204606503,H1,-0.0681420402389735,AX,0.031216707137845,L1,-0...
GetData ===>> L2(CDD),0.0110071433637867,H2,2.8550223658941,H1,0.0978005055809369,AX,-0.407645611511645,L1,-0.2...
GetData ===>> L2(CDD),0.00833397727314888,H2,2.85980594654991,H1,0.21101176581535,AX,-0.0278372899740236,L1,-0....
GetData ===>> L2(CDD),0.00912020241397181,H2,2.77183846682158,H1,-0.202116368601613,AX,-0.123462679924112,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:00:57 -- collecting point 225
GetData ===>> L2(CDD),0.00644703754701332,H2,2.72529123276478,H1,0.145611965379985,AX,-0.121513576192174,L1,-0....
GetData ===>> L2(CDD),0.00833397727314888,H2,2.64559682253662,H1,0.248253703631182,AX,-0.217244300644824,L1,-0....
GetData ===>> L2(CDD),0.010220917863058,H2,2.81850458100185,H1,-0.245200212567437,AX,-0.07209674513499,L1,-0.20...
GetData ===>> L2(CDD),0.0100636727809075,H2,2.92829538230893,H1,-0.150872811146365,AX,-0.434695360112363,L1,0.2...
GetData ===>> L2(CDD),0.00864846731148277,H2,2.73660702350076,H1,-0.0253950282759512,AX,-0.212200045062644,L1,0...
GetData ===>> L2(CDD),0.00959193757044672,H2,2.93331268424569,H1,-0.133063313989308,AX,-0.124265250901842,L1,-0...
GetData ===>> L2(CDD),0.0105354080453542,H2,3.01464323255192,H1,0.0803315248164367,AX,-0.0206134032952494,L1,-0...
GetData ===>> L2(CDD),0.00754775228228662,H2,2.9408970266539,H1,0.167679592229929,AX,-0.131603011662184,L1,0.06...
GetData ===>> L2(CDD),0.00833397727314888,H2,2.84032175203412,H1,0.00609188565500447,AX,-0.0524898283016807,L1,...
GetData ===>> L2(CDD),0.00707601735975037,H2,2.7451231171741,H1,-0.202690832513565,AX,-0.249687403476303,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00943469251228999,H2,2.78922133451937,H1,0.00816040503001224,AX,0.00828268566307833,L1,...
GetData ===>> L2(CDD),0.00817673226297957,H2,2.91056000933863,H1,-0.091123521720529,AX,-0.114634354995841,L1,-0...
GetData ===>> L2(CDD),0.00864846731148277,H2,2.79680456136342,H1,0.0882614834555842,AX,-0.401570775269845,L1,0....
GetData ===>> L2(CDD),0.00801948725880869,H2,2.93482954802982,H1,-0.0957197523116077,AX,-0.0329971758326329,L1,...
GetData ===>> L2(CDD),0.00644703754701332,H2,2.70091023102575,H1,-0.0789434047324428,AX,0.0132134541622927,L1,-...
GetData ===>> L2(CDD),0.00801948725880869,H2,2.91277691339996,H1,0.0783777768998712,AX,-0.117959318047197,L1,0....
GetData ===>> L2(CDD),0.00817673226297957,H2,2.9186108954297,H1,0.154921683897116,AX,-0.0920472329397404,L1,0.0...
GetData ===>> L2(CDD),0.00754775228228662,H2,2.90157576529846,H1,-0.0806670155353734,AX,-0.110621453255127,L1,-...
GetData ===>> L2(CDD),0.00707601735975037,H2,3.06960643644346,H1,-0.085378202682681,AX,-0.157399382737321,L1,-0...
GetData ===>> L2(CDD),0.00880571233964735,H2,2.93541295780309,H1,-0.00689371798057104,AX,-0.213002542037592,L1,...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00786224226063624,H2,3.03634807839451,H1,0.0842390325206828,AX,-0.112111961569126,L1,-0...
GetData ===>> L2(CDD),0.00974918263460189,H2,2.84662198810255,H1,0.0463138911606722,AX,0.0335101393433775,L1,-0...
GetData ===>> L2(CDD),0.00880571233964735,H2,3.10508326290387,H1,0.113315984016621,AX,-0.103283532511454,L1,-0....
GetData ===>> L2(CDD),0.0106926531454999,H2,3.08582758912669,H1,-0.0913533337700802,AX,-0.153386659319859,L1,-0...
GetData ===>> L2(CDD),0.0100636727809075,H2,3.15304904133014,H1,0.029995046738836,AX,0.121811435032361,L1,0.002...
11:01:23 -- collecting point 250
GetData ===>> L2(CDD),0.00943469251228999,H2,3.08582758912669,H1,0.155036619255185,AX,-0.0699182185467916,L1,-0...
GetData ===>> L2(CDD),0.00849122228931661,H2,2.92806202005367,H1,-0.00218214748822002,AX,-0.0827599883448964,L1...
GetData ===>> L2(CDD),0.0100636727809075,H2,3.19553164307759,H1,0.163656810128388,AX,-0.152928061292342,L1,-0.0...
GetData ===>> L2(CDD),0.0110071433637867,H2,2.72879094789495,H1,0.128831712003448,AX,-0.0272639676152888,L1,-0....
GetData ===>> L2(CDD),0.00974918263460189,H2,2.93459618421787,H1,0.0860778651530201,AX,-0.134125354002096,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0100636727809075,H2,3.00845860645066,H1,-0.0324047487988128,AX,-0.111997307165175,L1,-0...
GetData ===>> L2(CDD),0.00691877239756847,H2,3.06540531838593,H1,0.241586831338918,AX,-0.0725553816831588,L1,-0...
GetData ===>> L2(CDD),0.0105354080453542,H2,3.18175960884881,H1,0.0463138911606722,AX,-0.125985043599937,L1,-0....
GetData ===>> L2(CDD),0.0105354080453542,H2,2.94661449282612,H1,0.170553018287045,AX,-0.154418504082441,L1,-0.1...
GetData ===>> L2(CDD),0.00959193757044672,H2,2.95571583434728,H1,0.0563121927911519,AX,-0.0427435514183027,L1,-...
GetData ===>> L2(CDD),0.00990642770475548,H2,3.12095489068187,H1,0.161128212822307,AX,0.0957789122341162,L1,-0....
GetData ===>> L2(CDD),0.0100636727809075,H2,3.2624104602287,H1,0.119292383025058,AX,-0.253241175126399,L1,0.003...
GetData ===>> L2(CDD),0.0106926531454999,H2,3.13099149389909,H1,-0.172933151678105,AX,-0.286944034458568,L1,-0....
GetData ===>> L2(CDD),0.0110071433637867,H2,3.14102819993826,H1,-0.0158571300161874,AX,-0.145017210919775,L1,-0...
GetData ===>> L2(CDD),0.00849122228931661,H2,3.17522379593603,H1,0.01505550164945,AX,0.11240753498833,L1,-0.038...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00974918263460189,H2,3.10963465927995,H1,-0.139612651172662,AX,-0.0410236099580594,L1,-...
GetData ===>> L2(CDD),0.00959193757044672,H2,3.12270545360718,H1,0.0709076007666176,AX,-0.307921748826412,L1,-0...
GetData ===>> L2(CDD),0.0105354080453542,H2,3.298477895191,H1,0.0452795900098536,AX,-0.122430801969673,L1,-0.23...
GetData ===>> L2(CDD),0.00754775228228662,H2,3.140094548527,H1,0.0512555675201163,AX,-0.0688862831780187,L1,-0....
GetData ===>> L2(CDD),0.00912020241397181,H2,3.0938799157547,H1,0.134463408334273,AX,-0.0372397279249043,L1,-0....
GetData ===>> L2(CDD),0.00974918263460189,H2,3.30244656135221,H1,0.0971109345534844,AX,0.073187381627606,L1,-0....
GetData ===>> L2(CDD),0.0113216336060672,H2,3.16098521162424,H1,0.125153887247941,AX,-0.309755844189285,L1,-0.0...
GetData ===>> L2(CDD),0.00943469251228999,H2,3.24373528747897,H1,-0.0573405547902159,AX,-0.0551270391967318,L1,...
GetData ===>> L2(CDD),0.00754775228228662,H2,3.05058485134401,H1,-0.000113645855720601,AX,-0.235586825325846,L1...
GetData ===>> L2(CDD),0.00912020241397181,H2,3.08559418934162,H1,0.0435557572238632,AX,-0.372800746862334,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:01:49 -- collecting point 275
GetData ===>> L2(CDD),0.0100636727809075,H2,3.35941036455334,H1,-0.110657350477928,AX,-0.224925275404387,L1,0.1...
GetData ===>> L2(CDD),0.0100636727809075,H2,3.25809179488942,H1,-0.1313397968131,AX,-0.00708280298592304,L1,-0....
GetData ===>> L2(CDD),0.00880571233964735,H2,3.2404671688456,H1,0.0912496007224824,AX,-0.186749079544571,L1,-0....
GetData ===>> L2(CDD),0.00896295737381037,H2,3.44673016397962,H1,0.101133439162382,AX,-0.0657904704336278,L1,-0...
GetData ===>> L2(CDD),0.00801948725880869,H2,3.1936642372602,H1,0.0773434413697156,AX,-0.049164639046139,L1,-0....
GetData ===>> L2(CDD),0.00833397727314888,H2,3.21735721246936,H1,0.224804908487825,AX,0.179498344607041,L1,-0.1...
GetData ===>> L2(CDD),0.00927744746013169,H2,3.19039628564487,H1,0.331593494778354,AX,0.0897009356143977,L1,-0....
GetData ===>> L2(CDD),0.00849122228931661,H2,3.21992495848073,H1,0.162967192023955,AX,-0.100531797807797,L1,-0....
GetData ===>> L2(CDD),0.00833397727314888,H2,3.22202584658692,H1,0.114465288642756,AX,0.0372943144309934,L1,-0....
GetData ===>> L2(CDD),0.00770499726846222,H2,3.26941374178398,H1,-0.112036194030773,AX,0.0691737133914209,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00912020241397181,H2,3.42221446134478,H1,0.241701777022808,AX,-0.221944605911721,L1,-0....
GetData ===>> L2(CDD),0.00974918263460189,H2,3.26591209474876,H1,0.25698967499368,AX,-0.0764537835175842,L1,0.2...
GetData ===>> L2(CDD),0.00912020241397181,H2,3.26322750716392,H1,0.00333386672153705,AX,-0.207499692198639,L1,-...
GetData ===>> L2(CDD),0.00912020241397181,H2,3.13519289321684,H1,0.181587053881999,AX,-0.150749717678043,L1,-0....
GetData ===>> L2(CDD),0.00959193757044672,H2,3.2130387457169,H1,0.133199147112276,AX,0.0569034600149272,L1,-0.0...
GetData ===>> L2(CDD),0.0103781629512068,H2,3.28096926579236,H1,0.0832046907058696,AX,-0.232262268669454,L1,-0....
GetData ===>> L2(CDD),0.0111643884819278,H2,3.54001218235067,H1,0.171012767250628,AX,-0.229166981457809,L1,-0.2...
GetData ===>> L2(CDD),0.0103781629512068,H2,3.26497832432005,H1,-0.0546976197191224,AX,-0.114978317223492,L1,-0...
GetData ===>> L2(CDD),0.00927744746013169,H2,3.40843924045422,H1,0.0460840463644881,AX,-0.166685907048012,L1,-0...
GetData ===>> L2(CDD),0.0114788787362052,H2,3.49471267132508,H1,0.242276505646636,AX,-0.0938817397899922,L1,-0....
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0116361238723415,H2,3.53078865851376,H1,0.0772285152679925,AX,-0.05845220785136,L1,-0.0...
GetData ===>> L2(CDD),0.0108498982516441,H2,3.58893333611913,H1,0.119867038727363,AX,-0.0507699042589232,L1,-0....
GetData ===>> L2(CDD),0.00896295737381037,H2,3.5714195159147,H1,0.161473021155649,AX,-0.185487978164564,L1,-0.2...
GetData ===>> L2(CDD),0.00849122228931661,H2,3.36944941082875,H1,0.278025299031383,AX,-0.511255780537561,L1,-0....
GetData ===>> L2(CDD),0.00943469251228999,H2,3.44836456596455,H1,0.0274667997663672,AX,-0.0229067065280348,L1,0...
11:02:16 -- collecting point 300
GetData ===>> L2(CDD),0.010220917863058,H2,3.55145414269811,H1,0.101363297075044,AX,-0.14547581271718,L1,-0.182...
GetData ===>> L2(CDD),0.0105354080453542,H2,3.20965401481228,H1,0.109638218414448,AX,-0.193169206401067,L1,-0.2...
GetData ===>> L2(CDD),0.010220917863058,H2,3.416961176296,H1,-0.0632009502032651,AX,-0.0912446350931956,L1,-0.0...
GetData ===>> L2(CDD),0.0130513303674982,H2,3.29462596987796,H1,-0.0273485620664034,AX,0.17192889101063,L1,-0.1...
GetData ===>> L2(CDD),0.00849122228931661,H2,3.47007902247843,H1,0.0764240329402727,AX,-0.196952475384247,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0124223496429998,H2,3.42665059065314,H1,0.0355112449518401,AX,0.0273178849310812,L1,-0....
GetData ===>> L2(CDD),0.0106926531454999,H2,3.76619081101982,H1,-0.0522844987647582,AX,-0.0878049224539318,L1,-...
GetData ===>> L2(CDD),0.0106926531454999,H2,3.47334790706773,H1,0.0547032636933556,AX,-0.0625799874388898,L1,-0...
GetData ===>> L2(CDD),0.00896295737381037,H2,3.63015042813143,H1,0.187104119006471,AX,-0.32775271949131,L1,-0.1...
GetData ===>> L2(CDD),0.0105354080453542,H2,3.4223312013326,H1,-0.0165466197996319,AX,0.0230750669461801,L1,-0....
GetData ===>> L2(CDD),0.00959193757044672,H2,3.39571484407161,H1,-0.109853024161824,AX,-0.0562736503752559,L1,-...
GetData ===>> L2(CDD),0.0136803111879717,H2,3.69752600841143,H1,0.106305255448828,AX,-0.0745045845743319,L1,0.0...
GetData ===>> L2(CDD),0.00974918263460189,H2,3.54129647736582,H1,-0.0281529571829577,AX,0.170208568949631,L1,-0...
GetData ===>> L2(CDD),0.0119506141626095,H2,3.37026654702939,H1,0.361482622063619,AX,-0.0546683943427979,L1,-0....
GetData ===>> L2(CDD),0.0110071433637867,H2,3.6408928445572,H1,0.275841251153248,AX,-0.307004699833776,L1,-0.27...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0103781629512068,H2,3.47066275106982,H1,-0.0765303444338611,AX,-0.39354734786902,L1,0.0...
GetData ===>> L2(CDD),0.0106926531454999,H2,3.65233598289106,H1,-0.0172361090903301,AX,-0.0354051130990643,L1,-...
GetData ===>> L2(CDD),0.0113216336060672,H2,3.43377178759289,H1,0.145497031144949,AX,0.0544952978093453,L1,-0.1...
set states for children of O. state=True
handle state [('O', True)]
update switch state O True args=() kw={'refresh': False} ncanvase=5
refresh_canvas_needed fired
GetData ===>> L2(CDD),0.0103781629512068,H2,3.61742315238584,H1,0.127682390261021,AX,-0.0247413451798925,L1,-0....
GetData ===>> L2(CDD),0.010220917863058,H2,3.57538928772642,H1,0.25170210392944,AX,-0.152240163841784,L1,-0.061...
GetData ===>> L2(CDD),0.00880571233964735,H2,3.57854176503362,H1,-0.0291871784900248,AX,-0.0820720407355278,L1,...
GetData ===>> L2(CDD),0.0125795948151267,H2,3.53510852595759,H1,0.167104908045603,AX,-0.103742154197001,L1,-0.1...
GetData ===>> L2(CDD),0.00927744746013169,H2,3.43552290952274,H1,0.15733532928971,AX,-0.0382716972273721,L1,-0....
GetData ===>> L2(CDD),0.0103781629512068,H2,3.59453782469462,H1,-0.035507395717696,AX,0.0555273665884291,L1,-0....
GetData ===>> L2(CDD),0.0103781629512068,H2,3.68946871942603,H1,0.0799867454848555,AX,-0.184226875132039,L1,0.0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
11:02:42 -- collecting point 325
GetData ===>> L2(CDD),0.00990642770475548,H2,3.70406530614305,H1,-0.0390696817250239,AX,-0.0919325761452801,L1,...
GetData ===>> L2(CDD),0.00990642770475548,H2,3.70348143850023,H1,0.251012422883739,AX,0.0524311635722441,L1,-0....
GetData ===>> L2(CDD),0.0114788787362052,H2,3.61870754886118,H1,0.155611296250557,AX,-0.219766418520268,L1,-0.2...
GetData ===>> L2(CDD),0.0117933690144763,H2,3.76081890129183,H1,0.0720568548680477,AX,-0.186634434032846,L1,-0....
GetData ===>> L2(CDD),0.0117933690144763,H2,3.76081890129183,H1,0.0720568548680477,AX,-0.186634434032846,L1,-0....
GetData ===>> L2(CDD),0.00912020241397181,H2,3.5333572260497,H1,-0.0828502514644611,AX,-0.391598791117732,L1,-0...
GetData ===>> L2(CDD),0.00849122228931661,H2,3.46085615689133,H1,-0.0458494800386885,AX,-0.206926476864204,L1,-...
GetData ===>> L2(CDD),0.0125795948151267,H2,3.54748446785031,H1,-0.0956048468141778,AX,-0.26309995680297,L1,-0....
GetData ===>> L2(CDD),0.0117933690144763,H2,3.77284734870805,H1,0.0967661492245381,AX,-0.360077471925369,L1,-0....
GetData ===>> L2(CDD),0.0106926531454999,H2,3.58659814200581,H1,0.127682390261021,AX,-0.25037523127145,L1,-0.22...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.0119506141626095,H2,3.76093568162466,H1,-0.134671927241875,AX,-0.20027715403079,L1,-0.0...
GetData ===>> L2(CDD),0.0110071433637867,H2,3.81325467051967,H1,0.100558794619709,AX,-0.302992600215567,L1,-0.3...
GetData ===>> L2(CDD),0.0121078593167412,H2,3.77413194890487,H1,-0.156732638311326,AX,0.154840494965695,L1,-0.1...
GetData ===>> L2(CDD),0.00959193757044672,H2,3.86195588219173,H1,0.342629372408899,AX,-0.0387303498955046,L1,-0...
GetData ===>> L2(CDD),0.0113216336060672,H2,3.60271109465855,H1,-0.0127544198910239,AX,-0.0538657653223839,L1,-...
GetData ===>> L2(CDD),0.0103781629512068,H2,3.8298385044353,H1,0.133543945463007,AX,0.169176377189355,L1,-0.042...
GetData ===>> L2(CDD),0.0103781629512068,H2,3.8298385044353,H1,0.133543945463007,AX,0.169176377189355,L1,-0.042...
GetData ===>> L2(CDD),0.013208575563619,H2,3.68176180934202,H1,-0.0803222936211604,AX,-0.157857978634004,L1,-0....
GetData ===>> L2(CDD),0.00880571233964735,H2,3.82691879501166,H1,0.184000765991584,AX,-0.0190080877806723,L1,0....
GetData ===>> L2(CDD),0.0116361238723415,H2,3.82855383121735,H1,-0.00654896970057536,AX,-0.22469599346359,L1,-0...
GetDeflection L2 (CDD) ===>> 0
testing L2_CDD_==3250
evaluate ot="L2(CDD).deflection==3250" t="L2_CDD_==3250", ctx="{'L2_CDD_': 0.0}"
GetData ===>> L2(CDD),0.00896295737381037,H2,3.67370464996835,H1,-0.049526638853158,AX,-0.151093666997796,L1,-0...
GetData ===>> L2(CDD),0.010220917863058,H2,3.96006639045141,H1,-0.190627018504513,AX,-0.306546175009711,L1,-0.1...
GetData ===>> L2(CDD),0.0111643884819278,H2,3.94488197894081,H1,0.148255456566254,AX,-0.254502187718371,L1,-0.2...
GetData ===>> L2(CDD),0.0133658207657381,H2,3.84677299062388,H1,-0.0492968168377059,AX,-0.0343731407223819,L1,-...
GetData ===>> L2(CDD),0.0119506141626095,H2,3.99802844845717,H1,0.325730736131611,AX,0.0526605116022419,L1,-0.0...
11:03:08 -- collecting point 350
GetData ===>> L2(CDD),0.0105354080453542,H2,3.95434300771916,H1,-0.0317152703506753,AX,-0.212200045062644,L1,-0...
GetData ===>> L2(CDD),0.0110071433637867,H2,4.05549996184027,H1,-0.0618220368387682,AX,-0.484322794283806,L1,-0...
%%%%%%%%%%%%%%%%%% Stop fired alive=True
11:03:10 -- stop execution
_cancel
GetData ===>> L2(CDD),0.0116361238723415,H2,4.00106547661789,H1,-0.139382850620809,AX,0.0391290713443628,L1,-0....
GetData ===>> L2(CDD),0.0110071433637867,H2,3.87900771775764,H1,-0.032289835758294,AX,-0.122774761410569,L1,-0....
GetData ===>> L2(CDD),0.00959193757044672,H2,3.62699778479288,H1,0.128831712003448,AX,-0.362026092510422,L1,-0....
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x1cc124998>
Estimated total time= 18335.0, elapsed time= 547.0, deviation= 17788.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
wait dialog stopped
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
Post Termination Started
11:03:13 -- ******* Post Termination Started *******
Post Measurement Started felix_pump_ms.py
11:03:13 -- ******* Post Measurement Started felix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.79085540771e-05
Pumping spectrometer
open () {'name': 'V'}
opening name=V desc=---
checking ownership. requestor=129.138.12.137
check software interlocks V
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open V ===>> OK
GetIndicatorState V ===>> OK
change switch state (True, True)
update switch state V True args=() kw={} ncanvase=5
11:03:13 -- OPEN   VALVE-V (Felix Ion Pump)
---------------------------------------- open V () result=[(True, True)], time=0.10 sec
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.353958129883
felix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
11:03:13 -- ******* Post Measurement Finished *******
----------------- stop -----------------
Post Termination Finished
11:03:13 -- ******* Post Termination Finished *******
----------------- finish -----------------
state changed from measurement to failed
----------------- stop -----------------
measurement finished
estimated time: 419.430 actual time: :372.119
flush and close file /Users/obama/PychronDev/data/isotopes/65/04102e-4679-4ff1-8efc-ecc11bfd3685.h5
measurement collection canceled
Cancel run state=canceled do_post_equilibration=True
wait dialog stopped
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
Post Termination Started
11:03:13 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
11:03:13 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
state changed from failed to canceled
_cancel
Queue cancel. stop timer
Stop timer. self._timer: <pychron.core.helpers.timer.Timer object at 0x1cc124998>
Estimated total time= 18335.0, elapsed time= 547.0, deviation= 17788.0
set extraction state False (0.75, 'green', 1.5)
wait dialog stopped
Cancel run state=None do_post_equilibration=True
wait dialog stopped
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
AbortPattern ===>> OK
Post Termination Started
11:03:14 -- ******* Post Termination Started *******
----------------- stop -----------------
Post Termination Finished
11:03:14 -- ******* Post Termination Finished *******
----------------- finish -----------------
----------------- stop -----------------
executed snippet estimated_duration=650.242112, duration=404.550853014
----------------- finish -----------------
----------------- stop -----------------
Measurement Finished unsuccessfully. Aborted=False
11:03:14 -- ******* Measurement Finished unsuccessfully. Aborted=False *******
failed execution step Measurement Failed
measurement did not complete successfully
state changed from canceled to failed
11:03:14 -- Automated run 65444-01E failed duration: 542.694 s
----------------- finish -----------------
----------------- stop -----------------
finish run. runs completed=1
write rem/ex queues
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/obama/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
